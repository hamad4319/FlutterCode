 @override
  Widget build(BuildContext context) {
    return BlocConsumer<HomeCubit, HomeState>(
      listener: (context, state) {
        context.read<HomeCubit>().updateZipCode();
      },
      builder: (context, state) {
        return Scaffold(
            backgroundColor: AppColors.kBGWhite,
            appBar: AppBar(
              elevation: 1,
              automaticallyImplyLeading: false,
              backgroundColor: AppColors.kBGWhite,
              leading: InkWell(
                onTap: () {
                  // onTapReset();
                  Get.back();
                },
                child: SizedBox(
                  height: 3.h,
                  width: 1.5.h,
                  child:
                      Image.asset(AppImages.back, color: AppColors.lightBlue),
                ),
              ),
              title: Text(
                "Filters",
                style: AppTextStyles.regBlack12Medium,
              ),
              centerTitle: true,
              actions: [
                Padding(
                    padding: EdgeInsets.only(right: 3.w, top: 1.h, bottom: 1.h),
                    child: InkWell(
                      onTap: () {
                        _controller.clearTags();
                        selectedLocation = 0;
                        onTapReset();
                      },
                      child: SizedBox(
                        height: 5.h,
                        width: 18.w,
                        child: Center(
                          child: Text(
                            "Reset all",
                            textAlign: TextAlign.center,
                            style: AppTextStyles.lightBlue12,
                          ),
                        ),
                      ),
                    ))
              ],
            ),
            body: Padding(
              padding: EdgeInsets.all(3.w),
              child: SingleChildScrollView(
                  child: Column(
                children: [
                  SizedBox(
                    height: 2.h,
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      for (int i = 0; i < state.propertiesList.length; i++)
                        InkWell(
                          onTap: () {
                            context.read<HomeCubit>().onChangePropertiesType(
                                state.propertiesList[i]);
                            context.read<HomeCubit>().onFilterChange();
                          },
                          child: Container(
                            decoration: BoxDecoration(
                                color: state.selectedPropertyType ==
                                        state.propertiesList[i]
                                    ? AppColors.lightBlue
                                    : const Color(0xffF2F4F5),
                                borderRadius: BorderRadius.circular(20)),
                            child: Padding(
                              padding: const EdgeInsets.symmetric(
                                  vertical: 8.0, horizontal: 14),
                              child: Text(
                                state.propertiesList[i],
                                style: TextStyle(
                                    fontSize: 16,
                                    color: state.selectedPropertyType ==
                                            state.propertiesList[i]
                                        ? Colors.white
                                        : Colors.black),
                              ),
                            ),
                          ),
                        )
                    ],
                  ),
                  SizedBox(
                    height: 3.h,
                  ),
                  for (int j = 0; j < allTypesOfInputs.length; j++)
                    Column(
                      children: [
                        const Divider(),
                        Container(
                          decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(17.sp)),
                          child: ListTileTheme(
                            selectedColor: AppColors.lightBlue,
                            contentPadding: EdgeInsets.zero,
                            dense: true,
                            horizontalTitleGap: 0.0,
                            minLeadingWidth: 0,
                            minVerticalPadding: 0,
                            child: ExpansionTile(
                              initiallyExpanded: (j == 0 &&
                                      ((selectedLocation == 0 &&
                                              state
                                                  .selectedCounty.isNotEmpty) ||
                                          (selectedLocation == 1 &&
                                              state.selectedCity.isNotEmpty) ||
                                          (selectedLocation == 2 &&
                                              state.zipCodes.isNotEmpty)))
                                  ? true
                                  : (j == 1 &&
                                          minBuiltYearController
                                              .text.isNotEmpty &&
                                          maxBuiltYearController
                                              .text.isNotEmpty)
                                      ? true
                                      : (j == 2 &&
                                              minAreaController
                                                  .text.isNotEmpty &&
                                              maxAreaController.text.isNotEmpty)
                                          ? true
                                          : (j == 3 &&
                                                  minLandController
                                                      .text.isNotEmpty &&
                                                  maxLandController
                                                      .text.isNotEmpty)
                                              ? true
                                              : (j == 4 &&
                                                      minImprovController
                                                          .text.isNotEmpty &&
                                                      maxImprovController
                                                          .text.isNotEmpty)
                                                  ? true
                                                  : (j == 5 &&
                                                          minMarketController
                                                              .text
                                                              .isNotEmpty &&
                                                          maxMarketController
                                                              .text.isNotEmpty)
                                                      ? true
                                                      : (j == 6 &&
                                                              (minDeedDateController
                                                                          .text !=
                                                                      '0' &&
                                                                  minDeedDateController
                                                                      .text
                                                                      .isNotEmpty) &&
                                                              (maxDeedDateController
                                                                          .text !=
                                                                      '0' &&
                                                                  maxDeedDateController
                                                                      .text
                                                                      .isNotEmpty))
                                                          ? true
                                                          : false,
                              textColor: AppColors.kBlack,
                              collapsedTextColor: AppColors.kBlack,
                              iconColor: AppColors.lightBlue,
                              collapsedBackgroundColor: AppColors.kBGWhite,
                              backgroundColor: j == 0
                                  ? Colors.white
                                  : const Color(0xff1D5C7C).withOpacity(0.03),
                              leading: const SizedBox.shrink(),
                              trailing: const Padding(
                                padding: EdgeInsets.only(right: 6.0),
                                child: Icon(
                                  Icons.keyboard_arrow_down,
                                ),
                              ),
                              title: Padding(
                                padding: EdgeInsets.symmetric(
                                    vertical: 0.h, horizontal: 6.w),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.start,
                                  children: [
                                    Text(
                                      allTypesOfInputs[j],
                                      style: const TextStyle(
                                        fontSize: 17,
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                              children: [
                                j != 0
                                    ? Padding(
                                        padding: const EdgeInsets.symmetric(
                                          horizontal: 22.0,
                                        ),
                                        child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            SizedBox(
                                              height: 5.h,
                                              width: MediaQuery.of(context)
                                                      .size
                                                      .width *
                                                  0.4,
                                              child: Center(
                                                  child:
                                                      DropdownButtonHideUnderline(
                                                child: DropdownButton2(
                                                  isExpanded: true,
                                                  buttonDecoration:
                                                      BoxDecoration(
                                                    color: Colors.white,
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8),
                                                    border: Border.all(
                                                      color: Colors.grey,
                                                    ),
                                                  ),
                                                  dropdownDecoration:
                                                      BoxDecoration(
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            15),
                                                    border: Border.all(
                                                      color: Colors.grey,
                                                    ),
                                                  ),
                                                  icon: Padding(
                                                    padding: EdgeInsets.only(
                                                        right: 4.w == 4.w
                                                            ? 2.w
                                                            : 3.0.w),
                                                    child: Visibility(
                                                      visible: true,
                                                      child: Icon(
                                                        CupertinoIcons
                                                            .chevron_down,
                                                        size: 4.w,
                                                        color: AppColors.kBlack,
                                                      ),
                                                    ),
                                                  ),
                                                  hint: Padding(
                                                    padding: EdgeInsets.only(
                                                        left: 3.0.w),
                                                    child: const Text(
                                                      'No Min',
                                                      // style: style,
                                                    ),
                                                  ),
                                                  items: generationOFMinLists(
                                                          j, state)
                                                      .map((item) =>
                                                          DropdownMenuItem<
                                                              String>(
                                                            value: item,
                                                            child: Padding(
                                                              padding: EdgeInsets
                                                                  .only(
                                                                      left: 3.0
                                                                          .w),
                                                              child: Text(
                                                                item,
                                                                style: AppTextStyles
                                                                    .regGrey10,
                                                                textAlign:
                                                                    TextAlign
                                                                        .start,
                                                                maxLines: 1,
                                                                overflow:
                                                                    TextOverflow
                                                                        .ellipsis,
                                                              ),
                                                            ),
                                                          ))
                                                      .toList(),
                                                  value: minStringGenerator(
                                                      j, state),
                                                  onChanged: (value) {
                                                    minDropDownOnChange(
                                                        value, j, state);
                                                  },
                                                ),
                                              )),
                                            ),
                                            SizedBox(
                                              height: 5.h,
                                              width: MediaQuery.of(context)
                                                      .size
                                                      .width *
                                                  0.4,
                                              child: Center(
                                                  child:
                                                      DropdownButtonHideUnderline(
                                                child: DropdownButton2(
                                                  isExpanded: true,
                                                  buttonDecoration:
                                                      BoxDecoration(
                                                    color: Colors.white,
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            8),
                                                    border: Border.all(
                                                      color: Colors.grey,
                                                    ),
                                                  ),
                                                  dropdownDecoration:
                                                      BoxDecoration(
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            15),
                                                    border: Border.all(
                                                      color: Colors.grey,
                                                    ),
                                                  ),
                                                  icon: Padding(
                                                    padding: EdgeInsets.only(
                                                        right: 4.w == 4.w
                                                            ? 2.w
                                                            : 3.0.w),
                                                    child: Visibility(
                                                      visible: true,
                                                      child: Icon(
                                                        CupertinoIcons
                                                            .chevron_down,
                                                        size: 4.w,
                                                        color: AppColors.kBlack,
                                                      ),
                                                    ),
                                                  ),
                                                  hint: Padding(
                                                    padding: EdgeInsets.only(
                                                        left: 3.0.w),
                                                    child: const Text(
                                                      'No Max',
                                                      // style: style,
                                                    ),
                                                  ),
                                                  items: generationOFMaxLists(
                                                          j, state)
                                                      .map((item) =>
                                                          DropdownMenuItem<
                                                              String>(
                                                            value: item,
                                                            child: Padding(
                                                              padding: EdgeInsets
                                                                  .only(
                                                                      left: 3.0
                                                                          .w),
                                                              child: Text(
                                                                item,
                                                                style: AppTextStyles
                                                                    .regGrey10,
                                                                textAlign:
                                                                    TextAlign
                                                                        .start,
                                                                maxLines: 1,
                                                                overflow:
                                                                    TextOverflow
                                                                        .ellipsis,
                                                              ),
                                                            ),
                                                          ))
                                                      .toList(),
                                                  value: maxStringGenerator(
                                                      j, state),
                                                  onChanged: (value) {
                                                    maxDropDownOnChange(
                                                        value, j, state);
                                                  },
                                                ),
                                              )),
                                            ),
                                          ],
                                        ),
                                      )
                                    : Padding(
                                        padding: const EdgeInsets.symmetric(
                                          horizontal: 22.0,
                                        ),
                                        child: Column(
                                          children: [
                                            Container(
                                              decoration: const BoxDecoration(
                                                  color: Color(0xffF2F4F5),
                                                  borderRadius:
                                                      BorderRadius.all(
                                                          Radius.circular(25))),
                                              height: 48,
                                              child: Row(
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceBetween,
                                                children: [
                                                  for (int loc = 0;
                                                      loc < locationList.length;
                                                      loc++)
                                                    InkWell(
                                                      onTap: () {
                                                        selectedLocation = loc;
                                                        if (loc == 0) {
                                                          // state.selectedCity
                                                          //     .clear();
                                                          // state.zipCodes
                                                          //     .clear();
                                                          // _controller
                                                          //     .clearTags();
                                                          _controller
                                                              .clearTags();
                                                          for (var element in state.selectedCounty) {
                                                            _controller.addTag =
                                                                element;
                                                          }
                                                        }
                                                        if (loc == 1) {
                                                          // state.zipCodes
                                                          //     .clear();
                                                          // state.selectedCounty
                                                          //     .clear();

                                                          _controller
                                                              .clearTags();
                                                          for (var element in state.selectedCity) {
                                                            _controller.addTag =
                                                                element;
                                                          }
                                                        }
                                                        if (loc == 2) {
                                                          // state.selectedCity
                                                          //     .clear();
                                                          // state.selectedCounty
                                                          //     .clear();
                                                          _controller
                                                              .clearTags();
                                                          for (var element in state.zipCodes) {
                                                            _controller.addTag =
                                                                element;
                                                          }
                                                        }
                                                        setState(() {});
                                                      },
                                                      child: Container(
                                                        decoration: selectedLocation ==
                                                                loc
                                                            ? BoxDecoration(
                                                                color: AppColors
                                                                    .lightBlue,
                                                                borderRadius:
                                                                    const BorderRadius
                                                                            .all(
                                                                        Radius.circular(
                                                                            25)))
                                                            : null,
                                                        child: Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                      .symmetric(
                                                                  vertical:
                                                                      10.0,
                                                                  horizontal:
                                                                      25),
                                                          child: Text(
                                                            locationList[loc],
                                                            style: TextStyle(
                                                                fontSize: 17,
                                                                color: selectedLocation ==
                                                                        loc
                                                                    ? Colors
                                                                        .white
                                                                    : Colors
                                                                        .grey),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                ],
                                              ),
                                            ),
                                            SizedBox(
                                              height: 2.h,
                                            ),
                                            selectedLocation != 2
                                                ? Column(
                                                    children: [
                                                      TextFieldTags(
                                                          textfieldTagsController:
                                                              _controller,
                                                          initialTags: selectedLocation ==
                                                                  0
                                                              ? state
                                                                  .selectedCounty
                                                              : selectedLocation ==
                                                                      1
                                                                  ? state
                                                                      .selectedCity
                                                                  : state
                                                                      .zipCodes,
                                                          textSeparators: const [
                                                            ' ',
                                                            ','
                                                          ],
                                                          letterCase:
                                                              LetterCase.normal,
                                                          validator:
                                                              (String tag) {
                                                            // if (_controller
                                                            //     .getTags!
                                                            //     .contains(
                                                            //         tag)) {
                                                            //   return 'you already entered that';
                                                            // }
                                                            return null;
                                                          },
                                                          inputfieldBuilder:
                                                              (context,
                                                                  tec,
                                                                  fn,
                                                                  error,
                                                                  onChanged,
                                                                  onSubmitted) {
                                                            return ((context,
                                                                sc,
                                                                tags,
                                                                onTagDelete) {
                                                              return TextFormField(
                                                                onChanged:
                                                                    (val) {
                                                                  setState(
                                                                      () {});
                                                                },
                                                                textInputAction:
                                                                    TextInputAction
                                                                        .search,
                                                                controller: selectedLocation ==
                                                                        0
                                                                    ? countiesController
                                                                    : selectedLocation ==
                                                                            1
                                                                        ? citiesController
                                                                        : tec,
                                                                focusNode: fn,
                                                                autofocus: state
                                                                    .showSearchResults,
                                                                style: AppTextStyles
                                                                    .regBlackTextField12,
                                                                maxLines: 1,
                                                                decoration: InputDecoration(
                                                                    errorText: error,
                                                                    prefixIconConstraints: BoxConstraints(maxWidth: _distanceToField * 0.64),
                                                                    contentPadding: const EdgeInsets.symmetric(vertical: 3),
                                                                    border: const OutlineInputBorder(borderRadius: BorderRadius.all(Radius.circular(30))),
                                                                    hintText: selectedLocation == 0
                                                                        ? state.selectedCounty.contains('All Counties')
                                                                            ? ''
                                                                            : "Search Counties"
                                                                        : selectedLocation == 1
                                                                            ? state.selectedCity.contains('All Cities')
                                                                                ? ''
                                                                                : "Search Cities"
                                                                            : '',
                                                                    prefixIcon: Padding(
                                                                      padding: const EdgeInsetsDirectional
                                                                              .only(
                                                                          start:
                                                                              10.0),
                                                                      child:
                                                                          SingleChildScrollView(
                                                                        controller:
                                                                            sc,
                                                                        scrollDirection:
                                                                            Axis.horizontal,
                                                                        child: Row(
                                                                            children: [
                                                                              IconButton(onPressed: () {}, icon: const Icon(Icons.search)),
                                                                              ...tags.map((String tag) {
                                                                                if (selectedLocation == 0 && state.countiesList.contains(tag)) {
                                                                                  return Container(
                                                                                    decoration: BoxDecoration(
                                                                                        borderRadius: const BorderRadius.all(
                                                                                          Radius.circular(20.0),
                                                                                        ),
                                                                                        color: AppColors.lightBlue),
                                                                                    margin: const EdgeInsets.symmetric(horizontal: 5.0),
                                                                                    padding: const EdgeInsets.symmetric(horizontal: 10.0, vertical: 5.0),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      children: [
                                                                                        InkWell(
                                                                                          child: Text(
                                                                                            tag.toCapitalize(),
                                                                                            style: const TextStyle(color: Colors.white),
                                                                                          ),
                                                                                          onTap: () {
                                                                                            print("$tag selected");
                                                                                          },
                                                                                        ),
                                                                                        const SizedBox(width: 4.0),
                                                                                        InkWell(
                                                                                          child: const Icon(
                                                                                            Icons.cancel,
                                                                                            size: 14.0,
                                                                                            color: Colors.white,
                                                                                          ),
                                                                                          onTap: () {
                                                                                            if (selectedLocation == 0) {
                                                                                              state.selectedCounty.remove(tag);
                                                                                            } else {
                                                                                              state.selectedCity.remove(tag);
                                                                                            }
                                                                                            onTagDelete(tag);
                                                                                            setState(() {});
                                                                                          },
                                                                                        )
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                } else if (selectedLocation == 1 && state.citiesList.contains(tag)) {
                                                                                  return Container(
                                                                                    decoration: BoxDecoration(
                                                                                        borderRadius: const BorderRadius.all(
                                                                                          Radius.circular(20.0),
                                                                                        ),
                                                                                        color: AppColors.lightBlue),
                                                                                    margin: const EdgeInsets.symmetric(horizontal: 5.0),
                                                                                    padding: const EdgeInsets.symmetric(horizontal: 10.0, vertical: 5.0),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      children: [
                                                                                        InkWell(
                                                                                          child: Text(
                                                                                            tag.toCapitalize(),
                                                                                            style: const TextStyle(color: Colors.white),
                                                                                          ),
                                                                                          onTap: () {
                                                                                            print("$tag selected");
                                                                                          },
                                                                                        ),
                                                                                        const SizedBox(width: 4.0),
                                                                                        InkWell(
                                                                                          child: const Icon(
                                                                                            Icons.cancel,
                                                                                            size: 14.0,
                                                                                            color: Colors.white,
                                                                                          ),
                                                                                          onTap: () {
                                                                                            if (selectedLocation == 0) {
                                                                                              state.selectedCounty.remove(tag);
                                                                                            } else {
                                                                                              state.selectedCity.remove(tag);
                                                                                            }
                                                                                            onTagDelete(tag);
                                                                                            setState(() {});
                                                                                          },
                                                                                        )
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                } else {
                                                                                  return Container();
                                                                                }
                                                                              }).toList()
                                                                            ]),
                                                                      ),
                                                                    )),
                                                              );
                                                            });
                                                          }),
                                                      SizedBox(height: 1.h),
                                                      Visibility(
                                                        visible: state.selectedCity.contains(
                                                                        'All Cities') &&
                                                                    selectedLocation ==
                                                                        1 ||
                                                                !state.selectedCity
                                                                        .contains(
                                                                            'All Cities') &&
                                                                    (state.citiesList.length -
                                                                            1) ==
                                                                        state
                                                                            .selectedCity
                                                                            .length &&
                                                                    selectedLocation ==
                                                                        1
                                                            ? false
                                                            : state.selectedCounty.contains('All Counties') &&
                                                                        selectedLocation ==
                                                                            0 ||
                                                                    !state.selectedCity.contains('All Counties') &&
                                                                        (state.countiesList.length - 1) ==
                                                                            state.selectedCounty.length &&
                                                                        selectedLocation == 0
                                                                ? false
                                                                : true,
                                                        child: SizedBox(
                                                          height: 30.h,
                                                          child: Card(
                                                              margin: EdgeInsets
                                                                  .zero,
                                                              child: ListView
                                                                  .builder(
                                                                // shrinkWrap: true,
                                                                itemCount: selectedLocation ==
                                                                        0
                                                                    ? state
                                                                        .countiesList
                                                                        .where((element) => element.toLowerCase().contains(countiesController
                                                                            .text
                                                                            .toLowerCase()))
                                                                        .length
                                                                    : state
                                                                        .citiesList
                                                                        .where((element) => element
                                                                            .toLowerCase()
                                                                            .contains(citiesController.text.toLowerCase()))
                                                                        .length,
                                                                itemBuilder:
                                                                    (context,
                                                                            index) =>
                                                                        InkWell(
                                                                  onTap: () {
                                                                    if (selectedLocation ==
                                                                        0) {
                                                                      if (state.selectedCounty.contains(state
                                                                          .countiesList
                                                                          .where((element) => element
                                                                              .toLowerCase()
                                                                              .contains(countiesController.text.toLowerCase()))
                                                                          .toList()[index])) {
                                                                        _controller.onTagDelete(state
                                                                            .countiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(countiesController.text.toLowerCase()))
                                                                            .toList()[index]);
                                                                        print(
                                                                            'remove tag');
                                                                        context.read<HomeCubit>().onChangeCounty(state
                                                                            .countiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(countiesController.text.toLowerCase()))
                                                                            .toList()[index]);
                                                                        context
                                                                            .read<HomeCubit>()
                                                                            .onFilterChange();
                                                                      } else {
                                                                        if (state.countiesList.where((element) => element.toLowerCase().contains(countiesController.text.toLowerCase())).toList()[index] ==
                                                                            'All Counties') {
                                                                          state
                                                                              .selectedCounty
                                                                              .clear();
                                                                          _controller
                                                                              .clearTags();
                                                                          FocusManager
                                                                              .instance
                                                                              .primaryFocus
                                                                              ?.unfocus();
                                                                        }

                                                                        _controller.addTag = state
                                                                            .countiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(countiesController.text.toLowerCase()))
                                                                            .toList()[index];

                                                                        context.read<HomeCubit>().onChangeCounty(state
                                                                            .countiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(countiesController.text.toLowerCase()))
                                                                            .toList()[index]);
                                                                        context
                                                                            .read<HomeCubit>()
                                                                            .onFilterChange();
                                                                        if ((state.countiesList.length - 1) ==
                                                                                state.selectedCounty.length &&
                                                                            !state.selectedCounty.contains('All Counties')) {
                                                                          _controller
                                                                              .clearTags();
                                                                          state
                                                                              .selectedCounty
                                                                              .clear();
                                                                          _controller.addTag =
                                                                              'All Counties';
                                                                          context
                                                                              .read<HomeCubit>()
                                                                              .onChangeCounty('All Counties');
                                                                          context
                                                                              .read<HomeCubit>()
                                                                              .onFilterChange();
                                                                        }
                                                                      }
                                                                      countiesController
                                                                          .clear();
                                                                    }
                                                                    if (selectedLocation ==
                                                                        1) {
                                                                      if (state.selectedCity.contains(state
                                                                          .citiesList
                                                                          .where((element) => element
                                                                              .toLowerCase()
                                                                              .contains(citiesController.text.toLowerCase()))
                                                                          .toList()[index])) {
                                                                        _controller.onTagDelete(state
                                                                            .citiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(citiesController.text.toLowerCase()))
                                                                            .toList()[index]);
                                                                        print(
                                                                            'remove tag');
                                                                        context.read<HomeCubit>().onChangeCity(state
                                                                            .citiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(citiesController.text.toLowerCase()))
                                                                            .toList()[index]);
                                                                        context
                                                                            .read<HomeCubit>()
                                                                            .onFilterChange();
                                                                      } else {
                                                                        if (state.citiesList.where((element) => element.toLowerCase().contains(citiesController.text.toLowerCase())).toList()[index] ==
                                                                            'All Cities') {
                                                                          state
                                                                              .selectedCity
                                                                              .clear();
                                                                          _controller
                                                                              .clearTags();

                                                                          FocusManager
                                                                              .instance
                                                                              .primaryFocus
                                                                              ?.unfocus();
                                                                        }

                                                                        _controller.addTag = state
                                                                            .citiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(citiesController.text.toLowerCase()))
                                                                            .toList()[index];

                                                                        context.read<HomeCubit>().onChangeCity(state
                                                                            .citiesList
                                                                            .where((element) =>
                                                                                element.toLowerCase().contains(citiesController.text.toLowerCase()))
                                                                            .toList()[index]);
                                                                        context
                                                                            .read<HomeCubit>()
                                                                            .onFilterChange();
                                                                        if ((state.citiesList.length - 1) ==
                                                                                state.selectedCity.length &&
                                                                            !state.selectedCity.contains('All Cities')) {
                                                                          _controller
                                                                              .clearTags();
                                                                          state
                                                                              .selectedCity
                                                                              .clear();
                                                                          _controller.addTag =
                                                                              'All Cities';
                                                                          context
                                                                              .read<HomeCubit>()
                                                                              .onChangeCity('All Cities');
                                                                          context
                                                                              .read<HomeCubit>()
                                                                              .onFilterChange();
                                                                        }
                                                                      }
                                                                      citiesController
                                                                          .clear();
                                                                    }
                                                                    setState(
                                                                        () {});
                                                                  },
                                                                  child:
                                                                      Padding(
                                                                    padding: const EdgeInsets
                                                                            .all(
                                                                        16.0),
                                                                    child: Row(
                                                                      children: [
                                                                        Visibility(
                                                                            visible: selectedLocation == 0
                                                                                ? state.selectedCounty.contains(state.countiesList.where((element) => element.toLowerCase().contains(countiesController.text.toLowerCase())).toList()[index])
                                                                                : state.selectedCity.contains(state.citiesList.where((element) => element.toLowerCase().contains(citiesController.text.toLowerCase())).toList()[index]),
                                                                            child: Icon(Icons.check_box, color: AppColors.lightBlue)),
                                                                        SizedBox(
                                                                          width: selectedLocation == 0
                                                                              ? state.selectedCounty.contains(state.countiesList.where((element) => element.toLowerCase().contains(countiesController.text.toLowerCase())).toList()[index])
                                                                                  ? 10
                                                                                  : 35
                                                                              : state.selectedCity.contains(state.citiesList.where((element) => element.toLowerCase().contains(citiesController.text.toLowerCase())).toList()[index])
                                                                                  ? 10
                                                                                  : 35,
                                                                        ),
                                                                        Text(selectedLocation ==
                                                                                0
                                                                            ? state.countiesList.where((element) => element.toLowerCase().contains(countiesController.text.toLowerCase())).toList()[index].toCapitalize()
                                                                            : state.citiesList.where((element) => element.toLowerCase().contains(citiesController.text.toLowerCase())).toList()[index].toCapitalize()),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ),
                                                              )),
                                                        ),
                                                      ),
                                                    ],
                                                  )
                                                : Column(
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .start,
                                                    children: [
                                                      TextFieldTags(
                                                          textfieldTagsController:
                                                              _controller,
                                                          initialTags: selectedLocation ==
                                                                  0
                                                              ? state
                                                                  .selectedCounty
                                                              : selectedLocation ==
                                                                      1
                                                                  ? state
                                                                      .selectedCity
                                                                  : state
                                                                      .zipCodes,
                                                          textSeparators: const [
                                                            ' ',
                                                            ','
                                                          ],
                                                          letterCase:
                                                              LetterCase.normal,
                                                          validator:
                                                              (String tag) {
                                                            if (_controller
                                                                .getTags!
                                                                .contains(
                                                                    tag)) {
                                                              return 'you already entered that';
                                                            }
                                                            return null;
                                                          },
                                                          inputfieldBuilder:
                                                              (context,
                                                                  tec,
                                                                  fn,
                                                                  error,
                                                                  onChanged,
                                                                  onSubmitted) {
                                                            return ((context,
                                                                sc,
                                                                tags,
                                                                onTagDelete) {
                                                              return TextFormField(
                                                                controller:
                                                                    zipCodeController,
                                                                textInputAction:
                                                                    TextInputAction
                                                                        .done,
                                                                style: AppTextStyles
                                                                    .regBlackTextField12,
                                                                maxLines: 1,
                                                                keyboardType:
                                                                    TextInputType
                                                                        .number,
                                                                maxLength: 5,
                                                                onChanged:
                                                                    onChanged,
                                                                decoration:
                                                                    InputDecoration(
                                                                        errorText:
                                                                            error,
                                                                        prefixIconConstraints: BoxConstraints(
                                                                            maxWidth: _distanceToField *
                                                                                0.64),
                                                                        contentPadding: const EdgeInsets.symmetric(
                                                                            vertical:
                                                                                0,
                                                                            horizontal:
                                                                                12),
                                                                        border: const OutlineInputBorder(
                                                                            borderRadius: BorderRadius.all(Radius.circular(
                                                                                10))),
                                                                        hintText:
                                                                            'Enter a Zip Code..',
                                                                        labelText:
                                                                            'Zip Codes',
                                                                        prefixIcon:
                                                                            SingleChildScrollView(
                                                                          controller:
                                                                              sc,
                                                                          scrollDirection:
                                                                              Axis.horizontal,
                                                                          child:
                                                                              Row(children: [
                                                                            state.zipCodes.length > 8
                                                                                ? const SizedBox.shrink()
                                                                                : Padding(
                                                                                    padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                                    child: InkWell(
                                                                                      onTap: () {
                                                                                        if (state.zipCodes.length > 8) {
                                                                                          Utils.showToasts(context, "You can only enter 9 zip codes");
                                                                                        } else {
                                                                                          if (zipCodeController.text == "") {
                                                                                            Utils.showToasts(context, "Please enter zip code");

                                                                                            FocusScope.of(context).requestFocus(FocusNode());
                                                                                          } else if (zipCodeController.text.length < 5) {
                                                                                            Utils.showToasts(context, "Please enter 5 digits zip code");
                                                                                            FocusScope.of(context).requestFocus(FocusNode());
                                                                                          } else {
                                                                                            _controller.addTag = zipCodeController.text;
                                                                                            context.read<HomeCubit>().addZipCode(zipCodeController.text);
                                                                                            context.read<HomeCubit>().updateZipCode();
                                                                                            context.read<HomeCubit>().onFilterChange();
                                                                                            // bool val = context.watch<HomeCubit>().state.exemptionFilter;
                                                                                            // context.read<HomeCubit>().onChangeExemption(val);
                                                                                            zipCodeController.clear();
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      child: Icon(Icons.add_circle_outlined, color: AppColors.lightBlue),
                                                                                    ),
                                                                                  ),
                                                                            ...tags.map((String
                                                                                tag) {
                                                                              if (state.zipCodes.contains(tag)) {
                                                                                return Container(
                                                                                  decoration: BoxDecoration(
                                                                                      borderRadius: const BorderRadius.all(
                                                                                        Radius.circular(20.0),
                                                                                      ),
                                                                                      color: AppColors.lightBlue),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 5.0),
                                                                                  padding: const EdgeInsets.symmetric(horizontal: 10.0, vertical: 5.0),
                                                                                  child: Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                    children: [
                                                                                      InkWell(
                                                                                        child: Text(
                                                                                          tag,
                                                                                          style: const TextStyle(color: Colors.white),
                                                                                        ),
                                                                                        onTap: () {
                                                                                          print("$tag selected");
                                                                                        },
                                                                                      ),
                                                                                      const SizedBox(width: 4.0),
                                                                                      InkWell(
                                                                                        child: const Icon(
                                                                                          Icons.cancel,
                                                                                          size: 14.0,
                                                                                          color: Colors.white,
                                                                                        ),
                                                                                        onTap: () {
                                                                                          state.zipCodes.remove(tag);
                                                                                          onTagDelete(tag);
                                                                                          setState(() {});
                                                                                        },
                                                                                      )
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              } else {
                                                                                return Container();
                                                                              }
                                                                            }).toList()
                                                                          ]),
                                                                        )),
                                                              );
                                                            });
                                                          }),
                                                      const Text(
                                                        'This will replace the other location filters',
                                                        style: TextStyle(
                                                            fontSize: 12,
                                                            color: Color(
                                                                0xff636466)),
                                                      )
                                                    ],
                                                  )
                                          ],
                                        ),
                                      ),
                                SizedBox(height: 2.h),
                              ],
                            ),
                          ),
                        ),
                      ],
                    ),
                  const Divider(),
                  SizedBox(
                    width: 98.w,
                    child: Padding(
                      padding: const EdgeInsets.only(left: 14.0),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.start,
                        //crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            "Exemptions:",
                            style: AppTextStyles.regBlack10Bold,
                          ),
                          Checkbox(
                              splashRadius: 1.w,
                              checkColor: AppColors.kBGWhite,
                              activeColor: AppColors.lightBlue,
                              value: state.exemptionFilter,
                              materialTapTargetSize:
                                  MaterialTapTargetSize.shrinkWrap,
                              onChanged: (value) {
                                context
                                    .read<HomeCubit>()
                                    .onChangeExemption(value);
                                context.read<HomeCubit>().onFilterChange();
                              }),
                          Text(
                            "Hs-Homestead",
                            style: AppTextStyles.regGrey8Bold,
                          ),
                        ],
                      ),
                    ),
                  ),
                  SizedBox(
                    height: 2.h,
                  ),
                  InkWell(
                    onTap: () {
                      widget.setFilter(state);
                      Get.back();
                    },
                    child: Container(
                        // width: 43.w,
                        height: 5.5.h,
                        decoration: BoxDecoration(
                          color: AppColors.lightBlue,
                          borderRadius: BorderRadius.circular(2.5.h),
                          boxShadow: [
                            BoxShadow(
                              color: AppColors.lightBlue.withOpacity(0.05),
                              blurRadius: 0.5.h,
                              spreadRadius: 0.2.h,
                              offset: Offset(0.8.h, 0.8.h),
                            ),
                            BoxShadow(
                              color: AppColors.lightBlue.withOpacity(0.05),
                              blurRadius: 1.0.h,
                              spreadRadius: 0.1.h,
                              offset: Offset(-0.8.h, -0.8.h),
                            ),
                          ],
                        ),
                        child: Center(
                            child: Text(
                          "Show Results",
                          style: AppTextStyles.regWhite10Bold,
                        ))),
                  ),
                  SizedBox(
                    height: 5.h,
                  ),
                ],
              )),
              
            ));
      },
    );
  }
